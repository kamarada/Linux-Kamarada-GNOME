#!/bin/bash

COMMANDS=()

################################################################################
# Configuration goes first

COMMANDS+=('cnf')

# kamarada/Linux-Kamarada-GNOME#67 - CLI - Network utilities
COMMANDS+=('curl')
COMMANDS+=('dig')
COMMANDS+=('ftp')
COMMANDS+=('host')
COMMANDS+=('hostname')
COMMANDS+=('ip')
COMMANDS+=('mailx')
COMMANDS+=('mutt')
COMMANDS+=('nc')
COMMANDS+=('netcat')
COMMANDS+=('nmap')
COMMANDS+=('nslookup')
COMMANDS+=('ping')
COMMANDS+=('rsync')
COMMANDS+=('screen')
COMMANDS+=('ss')
COMMANDS+=('tcpdump')
COMMANDS+=('telnet')
COMMANDS+=('tracepath')
COMMANDS+=('traceroute')
COMMANDS+=('wget')
COMMANDS+=('whois')

# kamarada/Linux-Kamarada-GNOME#68 - CLI - Hardware utilities
COMMANDS+=('blkid')
COMMANDS+=('df')
COMMANDS+=('dmidecode')
COMMANDS+=('fdisk')
COMMANDS+=('free')
COMMANDS+=('hdparm')
COMMANDS+=('hwinfo')
COMMANDS+=('inxi')
COMMANDS+=('lsblk')
COMMANDS+=('lscpu')
COMMANDS+=('lshw')
COMMANDS+=('lspci')
COMMANDS+=('lsusb')
COMMANDS+=('sensors')
COMMANDS+=('top')

################################################################################
# Now the script

check_command() {
    # https://stackoverflow.com/a/677212
    return $(command -v "$1" 2>&1 >/dev/null)
}

COMMAND_NOT_FOUND=false
for COMMAND in "${COMMANDS[@]}"
do
    if ! check_command "$COMMAND"
    then
        echo "Error: $COMMAND could not be found"
        COMMAND_NOT_FOUND=true
    fi
done

if [[ "${COMMAND_NOT_FOUND}" == "true" ]]
then
    exit 1
fi
